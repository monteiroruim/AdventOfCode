
class d25:
    def __init__(self, coordinate1, coordinate2, startVal):
        '''
        constructor
        :param coordinate1 is the line position
        :param coordinate2 is the column position
        :startVal is the value in the coordinate 1:1
        '''
        if coordinate1 is None:
            # set to my example result
            self.coordinate1 = 2947
        else:
            self.coordinate1 = coordinate1

        if coordinate2 is None:
            # set to my example result
            self.coordinate2 = 3029
        else:
            self.coordinate2 = coordinate2

        if startVal is None:
            # set to my example result
            self.startVal = 20151125
        else:
            self.startVal = startVal
        

    '''
    Problem
    The first code is 20151125. After that, each code is generated by taking the previous one, 
    multiplying it by 252533 then keeping the remainder from 
    dividing that value by 33554393.
    To continue, please consult the code grid in the manual.  Enter the code at row 2947, column 3029
    return value calculated for the position
    '''
    def get_value(self):
        lim=self.coordinate1*self.coordinate2
        myVal=self.startVal

        for vec in range(1,lim):
            col=1
            row=vec            
            for pos in range(0,vec):
                if (row == self.coordinate1 and col == self.coordinate2):
                    print("vector:", vec,"row:", row,"column:", col,"output:", myVal)
                    exit()
                myVal=(myVal*252533)%33554393
                row-=1
                col+=1


